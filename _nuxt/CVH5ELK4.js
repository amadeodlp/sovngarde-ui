import{G as i}from"./C7VPM9Ik.js";import{a as e}from"./t--hEgTQ.js";const h=i("projects",{state:()=>({projects:[],currentProject:null,isLoading:!1,error:null}),actions:{async fetchProjects(){this.isLoading=!0;try{const r=await e.get("/api/projects");this.projects=r.data,this.error=null}catch{this.error="Failed to fetch projects"}finally{this.isLoading=!1}},async fetchProjectById(r){this.isLoading=!0;try{const t=await e.get(`/api/projects/${r}`);this.currentProject=t.data,this.error=null}catch{this.error="Failed to fetch project details"}finally{this.isLoading=!1}},async createProject(r){this.isLoading=!0;try{const t=await e.post("/api/projects",r);return this.projects.push(t.data),{success:!0,project:t.data}}catch{return this.error="Failed to create project",{success:!1,error:this.error}}finally{this.isLoading=!1}},async updateProject(r,t){this.isLoading=!0;try{const s=await e.patch(`/api/projects/${r}`,t),o=this.projects.findIndex(a=>a.id===r);return o!==-1&&(this.projects[o]=s.data),this.currentProject&&this.currentProject.id===r&&(this.currentProject=s.data),{success:!0}}catch{return this.error="Failed to update project",{success:!1,error:this.error}}finally{this.isLoading=!1}},clearError(){this.error=null}}});export{h as u};
